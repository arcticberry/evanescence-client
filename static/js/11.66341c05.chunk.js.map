{"version":3,"sources":["screens/Register/register.schema.js","screens/Register/index.js"],"names":["RegistrationSchema","Yup","shape","businessName","required","email","phone","password","min","confirmPassword","oneOf","connect","register","app","isCreatingUser","metaData","dispatch","createUser","bindActionCreators","signupWithGoogle","history","useState","currentStep","setCurrentStep","isOnLastStep","className","style","maxWidth","initialValues","countryId","onSubmit","values","validationSchema","errors","touched","setFieldValue","validateForm","action","onClick","data-toggle","id","height","width","htmlFor","type","name","placeholder","onChange","e","target","value","length","countries","map","country","keys","key","phone_code","data-mask-format","href","disabled","role","aria-hidden","preventDefault","to"],"mappings":"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","file":"static/js/11.66341c05.chunk.js","sourcesContent":["import * as Yup from \"yup\";\n\nconst RegistrationSchema = Yup.object().shape({\n  businessName: Yup.string().required(\"Business Name Is Required\"),\n  email: Yup.string().email(\"Invalid email\").required(\"Email Is Required\"),\n  phone: Yup.number().required(\"Phone Number Is Required\"),\n  password: Yup.string().min(6).required(\"Password Is Required\"),\n  confirmPassword: Yup.string()\n    .oneOf([Yup.ref(\"password\"), null], \"Passwords don't match\")\n    .required(\"Password Is Required\"),\n});\n\nexport default RegistrationSchema;\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, Form, Formik, withFormik } from \"formik\";\nimport \"./index.css\";\nimport { createUser, signupWithGoogle } from \"services/register/register.slice\";\nimport { register } from \"../../serviceWorker\";\nimport { Link } from \"react-router-dom\";\nimport { bindActionCreators } from \"redux\";\nimport RegistrationSchema from \"./register.schema\";\n\nconst Register = ({\n  isCreatingUser,\n  metaData,\n  createUser,\n  history,\n  signupWithGoogle,\n}) => {\n  let [currentStep, setCurrentStep] = useState(0);\n  const isOnLastStep = currentStep === 1;\n\n  const registrationDetails = {\n    email: \"\",\n    confirmPassword: \"\",\n    password: \"\",\n    businessName: \"\",\n    phone: \"\",\n    countryId: 1,\n  };\n\n  const handleSubmit = (values) => {\n    createUser(values, history);\n  };\n\n  const handleSignupWithGoogle = () => {\n    signupWithGoogle(history);\n  };\n\n  return (\n    <div className=\"auth-fluid\">\n      <div className=\"auth-fluid auth-fluid-right text-center\">\n        <div className=\"auth-user-testimonial\">\n          <h2 className=\"mb-3\">I love the color!</h2>\n          <p className=\"lead\">\n            <i className=\"mdi mdi-format-quote-open\"></i> It's a elegent\n            templete. I love it very much! .{\" \"}\n            <i className=\"mdi mdi-format-quote-close\"></i>\n          </p>\n          <p>- Hyper Admin User</p>\n        </div>\n      </div>\n      <div className=\"auth-fluid-form-box\" style={{ maxWidth: \"70%\" }}>\n        <div className=\"align-items-center d-flex h-100\">\n          <div className=\"card-body card-body-form\">\n            <Formik\n              initialValues={registrationDetails}\n              onSubmit={handleSubmit}\n              validationSchema={RegistrationSchema}\n            >\n              {({ errors, touched, setFieldValue, validateForm }) => {\n                return (\n                  <Form action=\"#\">\n                    <h4 className=\"mt-0\">Free Sign Up</h4>\n                    <p className=\"text-muted mb-4\">\n                      Don't have an account? Create your account, it takes less\n                      than a minute\n                    </p>\n                    <a\n                      onClick={() => handleSignupWithGoogle()}\n                      className=\"btn btn-block btn-primary mb-3\"\n                    >\n                      Login With Google\n                    </a>\n                    <ul className=\"nav nav-pills nav-justified form-wizard-header mb-3\">\n                      <li\n                        className=\"nav-item\"\n                        onClick={() => setCurrentStep(0)}\n                      >\n                        <a\n                          data-toggle=\"tab\"\n                          className={`${\n                            currentStep == 0\n                              ? \"nav-link rounded-0 pt-2 pb-2 active\"\n                              : \"nav-link rounded-0 pt-2 pb-2\"\n                          }`}\n                        >\n                          <i className=\"mdi mdi-account-circle mr-1\"></i>\n                          <span className=\"d-none d-sm-inline\">\n                            Business Info.\n                          </span>\n                        </a>\n                      </li>\n                      <li\n                        className=\"nav-item\"\n                        onClick={() => setCurrentStep(1)}\n                      >\n                        <a\n                          data-toggle=\"tab\"\n                          className={`${\n                            currentStep == 1\n                              ? \"nav-link rounded-0 pt-2 pb-2 active\"\n                              : \"nav-link rounded-0 pt-2 pb-2\"\n                          }`}\n                        >\n                          <i className=\"mdi mdi-face-profile mr-1\"></i>\n                          <span className=\"d-none d-sm-inline\">Password</span>\n                        </a>\n                      </li>\n                    </ul>\n                    <div\n                      id=\"bar\"\n                      className=\"progress mb-3\"\n                      style={{ height: \"7px\" }}\n                    >\n                      <div\n                        className=\"bar progress-bar progress-bar-striped progress-bar-animated bg-success\"\n                        style={{ width: `${50 * (currentStep + 1)}%` }}\n                      ></div>\n                    </div>\n                    <div className={currentStep === 0 ? \"d-block\" : \"d-none\"}>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"fullname\">Business Name</label>\n                        <Field\n                          className=\"form-control\"\n                          type=\"text\"\n                          name=\"businessName\"\n                          placeholder=\"Enter your Business Name\"\n                        />\n                        {errors.businessName && touched.businessName ? (\n                          <div className=\"invalid-feedback\">\n                            {errors.businessName}\n                          </div>\n                        ) : null}\n                      </div>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"emailaddress\">Email address</label>\n                        <Field\n                          className=\"form-control\"\n                          type=\"email\"\n                          name=\"email\"\n                          placeholder=\"Enter your email\"\n                        />\n                        {errors.email && touched.email ? (\n                          <div className=\"invalid-feedback\">{errors.email}</div>\n                        ) : null}\n                      </div>\n                      <div className=\"form-group\">\n                        <label>Telephone</label>\n                        <div className=\"d-flex\">\n                          <select\n                            name=\"countryId\"\n                            required\n                            onChange={(e) =>\n                              setFieldValue(\"countryId\", e.target.value)\n                            }\n                            className=\"form-control custom-select col-md-3 border-right-radius\"\n                          >\n                            {metaData.length\n                              ? metaData[0].countries.map((country, keys) => (\n                                  <option key={country.id} value={country.id}>\n                                    {country.phone_code}\n                                  </option>\n                                ))\n                              : null}\n                          </select>\n                          ;\n                          <Field\n                            type=\"tel\"\n                            name=\"phone\"\n                            className=\"form-control border-left-radius\"\n                            data-toggle=\"input-mask\"\n                            placeholder=\"Enter your Telephone Number\"\n                            data-mask-format=\"0000-0000\"\n                          />\n                        </div>\n                        {errors.phone && touched.phone ? (\n                          <div className=\"invalid-feedback\">{errors.phone}</div>\n                        ) : null}\n                      </div>\n                    </div>\n                    <div className={currentStep === 1 ? \"d-block\" : \"d-none\"}>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"password\">Password</label>\n                        <Field\n                          className=\"form-control\"\n                          type=\"password\"\n                          name=\"password\"\n                          id=\"password\"\n                          placeholder=\"Enter your password\"\n                        />\n                        {errors.password && touched.password ? (\n                          <div className=\"invalid-feedback\">\n                            {errors.password}\n                          </div>\n                        ) : null}\n                      </div>\n                      <div className=\"form-group\">\n                        <label htmlFor=\"password\">Confirm Password</label>\n                        <Field\n                          className=\"form-control\"\n                          type=\"password\"\n                          name=\"confirmPassword\"\n                          placeholder=\"Confim your password\"\n                        />\n                        {errors.confirmPassword && touched.confirmPassword ? (\n                          <div className=\"invalid-feedback\">\n                            {errors.confirmPassword}\n                          </div>\n                        ) : null}\n                      </div>\n                    </div>\n                    <div className=\"form-group\">\n                      <div className=\"custom-control custom-checkbox\">\n                        <input\n                          type=\"checkbox\"\n                          className=\"custom-control-input\"\n                          id=\"checkbox-signup\"\n                        />\n                        <label\n                          className=\"custom-control-label\"\n                          htmlFor=\"checkbox-signup\"\n                        >\n                          I accept{\" \"}\n                          <a href=\"#\" className=\"text-muted\">\n                            Terms and Conditions\n                          </a>\n                        </label>\n                      </div>\n                    </div>\n                    <div className=\"form-group mb-0 text-center\">\n                      {isOnLastStep ? (\n                        <button\n                          type=\"submit\"\n                          disabled={isCreatingUser}\n                          className={\"btn btn-primary pull-right\"}\n                        >\n                          {isCreatingUser ? (\n                            <span\n                              className=\"spinner-border spinner-border-sm mr-1\"\n                              role=\"status\"\n                              aria-hidden=\"true\"\n                            ></span>\n                          ) : null}\n                          {isCreatingUser ? \"Submitting\" : \"Submit\"}\n                        </button>\n                      ) : (\n                        <a\n                          href=\"#\"\n                          onClick={(e) => {\n                            e.preventDefault();\n                            setCurrentStep(currentStep + 1);\n                          }}\n                          className={`btn btn-dark pull-right`}\n                        >\n                          {\"Next\"}\n                        </a>\n                      )}\n                    </div>\n                  </Form>\n                );\n              }}\n            </Formik>\n            <footer className=\"footer footer-alt\">\n              <p className=\"text-muted\">\n                Already have account?{\" \"}\n                <Link to=\"/\" className=\"text-muted ml-1\">\n                  <b>Log In</b>\n                </Link>\n              </p>\n            </footer>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ register, app }) => {\n  return {\n    isCreatingUser: register.isCreatingUser,\n    metaData: app.metaData,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  createUser: bindActionCreators(createUser, dispatch),\n  signupWithGoogle: bindActionCreators(signupWithGoogle, dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\n"],"sourceRoot":""}